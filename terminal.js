let currentDir = '/home/user';

document.getElementById('input').addEventListener('keypress', function (event) {
    if (event.key === 'Enter') {
        const inputText = event.target.value.trim();
        const output = document.getElementById('output');
        
        // Add a newline before the input command to start it on a new line
        output.innerHTML += `\n> ${inputText}\n`; 
        
        if (inputText === 'gizzy') {
            const img = document.createElement('img');
            img.src = 'static/gizzy.png'; // Replace with your image URL
            img.style.width = '300px';
            img.style.marginTop = '10px';
            output.appendChild(img); // Append the image without removing the previous content
        }
        else if (inputText === 'gizzy -fr') {
            const img = document.createElement('img');
            img.src = 'static/gizzyfr.png'; // Replace with your image URL
            img.style.width = '300px';
            img.style.marginTop = '10px';
            output.appendChild(img); // Append the image without removing the previous content
        }
         else if (inputText === 'kabir') {
            const sound = document.getElementById('kabir-sound');
            sound.play();
            output.innerHTML += '\nKabir sound playing...';
        } else if (inputText === 'cd') {
            output.innerHTML += `\nUsage: cd [directory]`;
        } else if (inputText.startsWith('cd ')) {
            const newDir = inputText.split(' ')[1];
            if (newDir) {
                currentDir = `/home/user/${newDir}`;
                output.innerHTML += `\nChanged directory to ${currentDir}`;
            } else {
                output.innerHTML += `\nPlease specify a directory.`;
            }
        } else if (inputText === 'ls') {
            output.innerHTML += `
Desktop  Documents  Downloads  Music  Pictures  Public  Videos
            `;
        } else if (inputText === 'pwd') {
            output.innerHTML += `\n${currentDir}`;
        } else if (inputText === 'cat /etc/os-release') {
            output.innerHTML += `
NAME="Troll Face OS"
VERSION="1.0"
ID=trollface
PRETTY_NAME="Troll Face OS v1.0"
            `;
        } else if (inputText === 'man ls') {
            output.innerHTML += `
LS(1)                   User Commands                   LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).
       ...
            `;
        } else if (inputText === 'date') {
            const date = new Date().toLocaleString();
            output.innerHTML += `\n${date}`;
        } else if (inputText === 'echo hello') {
            output.innerHTML += `\nHello, user! üëã`;
        } else if (inputText === 'sudo') {
            output.innerHTML += `\nSudo command requires superuser privileges. Try running as root.`;
        } else if (inputText === 'clear') {
            output.innerHTML = ''; // Clears the terminal output
        } else if (inputText === 'help') {
            output.innerHTML += `
Available commands:
  grizzy   - Show Grizzy image
  kabir    - Play Kabir sound
  cd       - Change directory
  ls       - List directory contents
  pwd      - Print current directory
  cat /etc/os-release - Show OS info
  man ls   - Show manual for ls command
  date     - Show current date and time
  echo hello - Show a greeting
  sudo     - Show sudo message
  clear    - Clear the terminal screen
  help     - Show available commands
  uptime   - Show system uptime
  df       - Show disk space usage
  neofetch - Show system info (simulated)
  neofetch-real - Run real neofetch (Linux systems only)
  clear    - Clear the terminal output

            `;
        } else if (inputText === 'uptime') {
            output.innerHTML += `\nUp for 3 days, 12 hours, 45 minutes`;
        } else if (inputText === 'df') {
            output.innerHTML += `
Filesystem     1K-blocks    Used Available Use% Mounted on
/dev/sda1      20480000 10240000 10240000  50% /
/dev/sdb1      10240000  5120000  5120000  50% /home
            `;
        } else if (inputText === 'neofetch') {
            output.innerHTML += `
‚†õ‚†õ‚£ø‚£ø‚£ø‚£ø‚£ø‚°∑‚¢∂‚£¶‚£∂‚£∂‚£§‚£§‚£§‚£Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†â‚†â‚†â‚†ô‚†ª‚£ø‚£ø‚†ø‚†ø‚†õ‚†õ‚†õ‚†ª‚£ø‚£ø‚£á‚†Ä
‚†Ä‚†Ä‚¢§‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚¢∏‚£∑‚°Ñ‚†Ä ‚£Ä‚£§‚£¥‚£ø‚£ø‚£ø‚£Ü
‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚†è‚†Ä‚†Ä‚†Ä‚£ø‚£ß‚†Ä‚†π‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ø
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†ø‚†á‚¢Ä‚£º‚£ø‚£ø‚†õ‚¢Ø‚°ø‚°ü
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†¶‚†¥‚¢ø‚¢ø‚£ø‚°ø‚†∑‚†Ä‚£ø‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£∑‚£∂‚£∂‚£§‚£§‚£§‚£§‚£§‚£∂‚£¶‚†É‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ê‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚†ü

OS: Trolix OS v1.0
Kernel: 5.10.0-9-amd64
Uptime: 3 days, 12 hours, 45 minutes
Kernel: 5.x.x
Uptime: 2 hours, 20 minutes
Packages: 200+
Shell: Bash
Resolution: 1920x1080
DE: TROLL
WM: Mutter
CPU: Troll Core T4600 @ 2.00GHz
GPU: TROLL T2000
RAM: 16GB

            `;
        } else if (inputText === 'neofetch -r') {
            // This requires 'neofetch' to be installed on your system
            output.innerHTML += `\n
‚°Ä‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Å‚†Ä‚£Ä‚£Ä‚†Ä‚£Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä
‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£õ‚£ø‚£ø‚£∑‚£ø‚£ø‚£Ø‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£è‚†â‚£ø‚†â‚¢π‚†ü‚¢â‚†â‚¢ª‚£ø‚†â‚¢ª‚†ã‚†ô‚°è‚£ø‚†ã‚¢ª‚°è‚†â‚£ø‚†â‚£â‚£ª‚†Ä
‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ª‚°Ä‚†à‚¢Ä‚£ø‚†Ä‚¢∏‚†Ä‚†Ä‚£ø‚†Ä‚¢∏‚†Ä‚†∞‚£ø‚£ø‚†Ä‚¢∏‚†Å‚¢Ä‚°ü‚†Ä‚¢π‚£ø‚†Ä
‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ß‚†Ä‚£º‚£ø‚†Ä‚¢∏‚°Ä‚†Ä‚£è‚†Ä‚¢∏‚†Ä‚†Ä‚£ø‚£ø‚°Ñ‚†ò‚†Ä‚¢∏‚°á‚†Ä‚¢∞‚£æ‚†Ä
‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†Å‚†Ä‚†Ä‚†à‚¢ª‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£Ä‚£ø‚£ø‚£Ü‚°à‚¢Å‚£∞‚£ø‚£Ñ‚†ò‚¢Ä‚£º‚£ø‚£ø‚£á‚£Ä‚£Ä‚£º‚£ß‚£Ä‚£à‚£π‚°á
‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†ø‚¢ø‚£ø‚†ø‚†õ‚†õ‚†ª‚†ø‚†ø‚†ª‚†õ‚†â‚†â‚†â‚†Ä
‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ß‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚†∂‚°∂‚†ø‚£ø‚£ø‚†ø‚†ø‚¢ø‚°ø‚†ø‚†ø‚£ø‚†ø‚¢ø‚°ø‚¢ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚£ø‚£ø‚†Ä‚†Ä‚¢®‚£≠‚£Ω‚£ø‚°á‚†Ä‚¢†‚£æ‚£ø‚£ø‚£∑‚£Ü‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚¢±‚°Ü‚†à‚£ø‚†Ä‚¢¥‚£æ‚°á‚†Ä‚£∂‚£ø‚†Ä‚†ò‚°á‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚†â‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Å‚†Ä‚†Ä‚†ò‚°è‚†â‚†â‚†õ‚†ã‚†Ä‚£†‚£º‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚¢®‚°Å‚†∫‚£ø‚†Ä‚£à‚£π‚°á‚†Ä‚£â‚£ø‚†Ä‚°Ä‚†Å‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†∏‚†á‚†Ä‚£ø‚†Ä‚†π‚¢ø‚°á‚†Ä‚†ø‚¢ø‚†Ä‚¢∏‚°Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚¢∑‚£Ñ‚°Ä‚†Ä‚¢†‚°æ‚†ã‚†Ä‚†õ‚¢∂‚£∂‚£æ‚°á‚†Ä‚£†‚†Ñ‚¢∞‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚¢∂‚£∂‚°∂‚†ö‚†ì‚†∂‚†∂‚†æ‚†∑‚†∂‚†∂‚†æ‚†∂‚†æ‚†≥‚†æ‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£π‚°∑‚£†‚†è‚†ô‚¢∑‚£∂‚†≤‚†∂‚†∂‚£∑‚£∂‚°ø‚†ã‚¢Ä‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£π‚£ß‚°Ä‚¢Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚°Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†ü‚£´‚£Ω‚†É‚†Ä‚†Ä‚†Ä‚†â‚†â‚†ô‚†õ‚†ã‚†Ä‚†Ä‚¢Ä‚£æ‚°É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†â‚¢â‚°â‚†ª‚°è‚†â‚£ø‚†ü‚¢â‚°â‚†ô‚£ø‚†â‚¢π‚°è‚¢â‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†õ‚†Å‚†Ä‚£º‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚°è‚¢≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†∏‚†á‚£∞‚°á‚†Ä‚£ø‚†Ä‚¢∏‚£ß‚£Ä‚£ø‚†Ä‚†à‚†Ä‚£º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚†è‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚°Ä‚†Ä‚†Ä‚†∞‚£¶‚£Ñ‚°Ä‚£Ä‚£§‚°æ‚£ø‚£ø‚£ß‚†Ä‚†ª‚¢¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚¢∏‚†Ä‚†à‚°á‚†Ä‚£ø‚†Ä‚¢∏‚°ü‚†õ‚£ø‚†Ä‚¢†‚†Ä‚¢π‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚£ø‚£∑‚£Ñ‚°Ä‚†Ä‚†ô‚†ø‚£ø‚£è‚£Ω‚£ø‚£ø‚£ø‚£ø‚†Ñ‚¢∏‚£ß‚†à‚†ô‚†∂‚£§‚£Ä‚†Ä‚†Ä‚£ø‚£Ä‚£∏‚£Ñ‚£†‚£∑‚£Ä‚£ø‚£¶‚£Ä‚£Å‚£†‚£ø‚£Ä‚£∏‚£ß‚£Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†π‚£Ü‚†Ä‚†Ä‚†Ä‚†â‚†≥‚£¶‚°Ä‚†â‚†â‚†ô‚†ª‚£ø‚†â‚†Å‚†Ä‚†â‚†â‚†Ä‚†Ä‚†à‚†â‚†Ä‚†â‚†π‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚¢ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚†ì‚†í‚†≤‚¢¶‚£π‚†∑‚†í‚†≤‚£∂‚°ñ‚†í‚£∂‚£∂‚†í‚¢∂‚£æ‚†ó‚†í‚†≤‚°∂‚†í‚°ñ‚†∂‚£Ñ
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚°û‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä‚¢π‚°Ä‚¢à‚°è‚†Ä‚£ø‚†Ä‚¢∏‚°á‚†Ä‚£ø‚°ü‚†Ä‚¢∏‚£ø‚†Ä‚¢∏‚£∂‚°á‚†Ä‚¢≥‚†Ä‚¢∏
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä‚¢Ä‚£∞‚†É‚¢π‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚¢†‚†Ä‚†õ‚°á‚†Ä‚£ø‚†Ä‚¢∏‚°á‚†Ä‚£ø‚°á‚†Ä‚¢∏‚£ø‚†Ä‚¢†‚£¨‚°á‚†Ä‚¢∏‚†Ä‚¢∏
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†õ‚†ã‚†â‚†Ä‚†∫‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†∂‚†û‚†ã‚†Ä‚†Ä‚†Ä‚¢ø‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†Ä‚¢∏‚†Ä‚¢∞‚£ß‚†Ä‚†õ‚†Ä‚£∏‚°á‚†Ä‚†õ‚£ß‚†Ä‚†ò‚¢ª‚†Ä‚†ò‚†õ‚°á‚†Ä‚†ö‚†Ä‚¢∏
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ü‚†Ä‚†Ä‚†Ä‚†ø‚†ì‚†õ‚†ì‚†õ‚†â‚†ô‚†í‚†ö‚†â‚†õ‚£õ‚°ö‚†õ‚†õ‚†õ‚†õ‚†õ‚†ì‚°ö‚†õ‚†õ‚†ì‚†õ‚†â
            `;
            // If using Node.js or server-side, you'd execute the command here
            // For now, we simulate that it's running
        } else if (inputText === 'clear') {
            output.innerHTML = 'Welcome to the terminal. Type a command.'; // Clears the terminal output
        } else {
            output.innerHTML += `\nCommand not found: ${inputText}`;
        }

        // Scroll to the bottom of the terminal for new output
        output.scrollTop = output.scrollHeight;
        
        // Clear the input field for the next command
        event.target.value = '';
    }
});
